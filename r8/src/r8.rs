use screen::Screen;
use registers::Registers;

pub const MEMORY_SIZE: u32 = 4096;
pub const ENTRY_POINT: u32 = 0x200;
pub const FONT_SIZE: u32 = 80;
pub const SCREEN: Screen = Screen::new();
pub const FONT_SET: [u32; 80] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, //0
	0x20, 0x60, 0x20, 0x20, 0x70, //1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
	0x90, 0x90, 0xF0, 0x10, 0x10, //4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
	0xF0, 0x10, 0x20, 0x40, 0x40, //7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
	0xF0, 0x90, 0xF0, 0x90, 0x90, //A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
	0xF0, 0x80, 0x80, 0x80, 0xF0, //C
	0xE0, 0x90, 0x90, 0x90, 0xE0, //D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
	0xF0, 0x80, 0xF0, 0x80, 0x80  //F
];


pub struct R8 {
    pub program_counter: u32,
    pub stack_pointer: u32,
    pub registers: Registers,
    pub stack: [u32; 16],
    pub memory: [u32; MEMORY_SIZE as usize],
    pub keypad: [u32; 16],
    pub sound_timer: u32,
    pub delay_timer: u32,
    pub opcode: u32, // create class for this
}

impl R8 {
    pub fn new() -> R8 {
        R8 {
            program_counter: ENTRY_POINT,
            stack_pointer: 0x000,
            registers: Registers::new(),
            stack: [0x000; 16],
            memory: [0x000; MEMORY_SIZE as usize],
            keypad: [0x000; 16], // todo: initialize keypad
            sound_timer: 0x000,
            delay_timer: 0x000,
            opcode: 0x000,
        }
    }
}
